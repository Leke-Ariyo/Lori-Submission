{"version":3,"sources":["Components/Logo.js","Components/Navbar.js","Components/Icons.js","Services/auth.service.js","Pages/Authentication/Login.js","Pages/Authentication/Register.js","Services/user.service.js","Pages/App/Quiz.js","Components/Searchbar.js","Components/Modal.js","Components/Select.js","Pages/App/Home.js","reportWebVitals.js","index.js"],"names":["Logo","className","Spinner","style","width","height","color","type","fontSize","NavBar","isOpen","toggleClick","navClick","navigation","Navbar","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavbarText","Button","size","Search","props","viewBox","fill","xmlns","opacity","d","fillRule","clipRule","PasswordToggler","Left","aria-hidden","focusable","data-prefix","data-icon","role","Right","API_URL","data","axios","post","then","response","headers","localStorage","setItem","JSON","stringify","parse","getItem","removeItem","Login","history","useHistory","useState","email","setEmail","password","setPassword","loading","setLoading","success","setSuccess","placeHolder","setPlaceHolder","passwordType","setPasswordType","error","setError","setOpen","handleLogin","e","a","preventDefault","regg","test","bodyParameters","AuthService","login","push","err","message","toString","detail","finally","to","Form","onSubmit","FormGroup","Label","Input","placeholder","value","onChange","target","onFocus","InputGroup","InputGroupAddon","addonType","cursor","InputGroupText","block","disabled","Register","first_name","setFirst_name","last_name","setLast_name","handleRegister","username","Math","floor","random","register","errMsg","url","user","Authorization","access_token","get","patch","delete","Quiz","index","question","options","backClick","nextClick","prevClick","prevDisabled","nextDisabled","display","alignItems","margin","SearchBar","barClassName","AppModal","modal","toggle","title","body","showFooter","action","Modal","ModalHeader","ModalBody","ModalFooter","AppSelect","handleChange","isLoading","defaultInputValue","showError","errorMessage","marginTop","classNamePrefix","hideSelectedOptions","isFocussed","closeMenuOnSelect","isSelected","backspaceRemovesValue","Home","handleGetTournaments","UserService","getInfo","state","userId","i","length","show","slice","offset","perPage","setState","pageCount","ceil","bookStoreList","allbookStoreList","total_fee","catch","status","logout","pageLoading","handleGetCategoryOptions","categoryLoading","currentCategory","prevState","categoryOptions","id","label","name","handlePageClick","selectedPage","selected","currentPage","loadMoreData","reset","tournamentSuccess","categorySuccess","difficultySuccess","createText","updateText","deleteText","createColor","toggleActionData","values","showBookSelect","bookOptions","category","book_category","handleInputChange","isCategory","handleSuccess","handleFocus","field","handleCreateTournament","book","createLoading","customer","formSubmit","createError","handleUpdateTournament","tournament","difficulty","formPatch","currentTournament","renderViews","window","scrollTo","top","showTournaments","showQuiz","userName","searchQuery","dropdownOpen","showCreateModal","modalType","showUpdateModal","first_nameSuccess","last_nameSuccess","currentQuestion","selectedOption","selectedAnswer","correctAnswers","showFinalModal","auth","this","justifyContent","fontWeight","marginRight","Table","hover","responsive","filter","item","toLowerCase","includes","map","scope","date_logged","price","toFixed","rental_charge","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","questions","question_text","choice_text","handleAnswerSelect","handleNext","finishQuiz","showHeader","correct_answer","handleDeleteTournament","creator","textTransform","category_name","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","App","isAuth","getCurrentUser","ReactDOM","render","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.0b4465ec.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nexport default function Logo() {\r\n  return (\r\n    <div className=\"logo\">\r\n      <Spinner\r\n        style={{ width: \"1rem\", height: \"1rem\", color: \"#cc7722\" }}\r\n        type=\"grow\"\r\n      />\r\n      <h6>\r\n        ? <span style={{ fontSize: \"20px\", color: \"#cc7722\" }}>?</span> ?\r\n      </h6>\r\n      <Spinner\r\n        style={{ width: \"1rem\", height: \"1rem\", color: \"#cc7722\" }}\r\n        type=\"grow\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  NavbarText,\r\n  Nav,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport Logo from \"./Logo\";\r\n\r\nfunction NavBar({ isOpen, toggleClick, navClick, navigation, color }) {\r\n  return (\r\n    <Navbar color=\"info\" light expand=\"md\" className=\"mb-3\">\r\n      <NavbarBrand href=\"/\">\r\n        LORI BOOK STORE <Logo />\r\n      </NavbarBrand>\r\n      <NavbarToggler onClick={toggleClick} />\r\n      <Collapse isOpen={isOpen} navbar>\r\n        <Nav className=\"mr-auto\" navbar></Nav>\r\n        <NavbarText>\r\n          <Button size=\"sm\" color={color} onClick={navClick}>\r\n            {navigation}\r\n          </Button>\r\n        </NavbarText>\r\n      </Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nfunction Search(props) {\r\n  return (\r\n    <svg\r\n      className={props.className}\r\n      width={props.width}\r\n      height={props.height}\r\n      viewBox=\"0 0 24 25\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        opacity=\"0.3\"\r\n        d=\"M14.2929 17.2686C13.9024 16.8781 13.9024 16.2449 14.2929 15.8544C14.6834 15.4639 15.3166 15.4639 15.7071 15.8544L19.7071 19.8544C20.0976 20.2449 20.0976 20.8781 19.7071 21.2686C19.3166 21.6592 18.6834 21.6592 18.2929 21.2686L14.2929 17.2686Z\"\r\n        fill=\"black\"\r\n      />\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        clipRule=\"evenodd\"\r\n        d=\"M4 11.5615C4 15.4275 7.13401 18.5615 11 18.5615C14.866 18.5615 18 15.4275 18 11.5615C18 7.69553 14.866 4.56152 11 4.56152C7.13401 4.56152 4 7.69553 4 11.5615ZM16 11.5615C16 14.3229 13.7614 16.5615 11 16.5615C8.23858 16.5615 6 14.3229 6 11.5615C6 8.8001 8.23858 6.56152 11 6.56152C13.7614 6.56152 16 8.8001 16 11.5615Z\"\r\n        fill=\"black\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\nfunction Ellipses(props) {\r\n  return (\r\n    <svg\r\n      className={props.className}\r\n      onClick={props.onClick}\r\n      height={props.height}\r\n      width={props.width}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 512 512\"\r\n    >\r\n      <path\r\n        fill={props.fill}\r\n        d=\"M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n}\r\nfunction PasswordToggler(props) {\r\n  return (\r\n    <svg\r\n      width={props.width}\r\n      height={props.height}\r\n      viewBox=\"0 0 22 19\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M0.0830078 9.71777C1.02301 4.59777 5.51001 0.717773 10.902 0.717773C16.294 0.717773 20.78 4.59777 21.721 9.71777C20.781 14.8378 16.294 18.7178 10.902 18.7178C5.51001 18.7178 1.02401 14.8378 0.0830078 9.71777ZM10.902 14.7178C12.2281 14.7178 13.4999 14.191 14.4375 13.2533C15.3752 12.3156 15.902 11.0439 15.902 9.71777C15.902 8.39169 15.3752 7.11992 14.4375 6.18224C13.4999 5.24456 12.2281 4.71777 10.902 4.71777C9.57593 4.71777 8.30416 5.24456 7.36647 6.18224C6.42879 7.11992 5.90201 8.39169 5.90201 9.71777C5.90201 11.0439 6.42879 12.3156 7.36647 13.2533C8.30416 14.191 9.57593 14.7178 10.902 14.7178ZM10.902 12.7178C10.1064 12.7178 9.3433 12.4017 8.78069 11.8391C8.21808 11.2765 7.90201 10.5134 7.90201 9.71777C7.90201 8.92212 8.21808 8.15906 8.78069 7.59645C9.3433 7.03384 10.1064 6.71777 10.902 6.71777C11.6977 6.71777 12.4607 7.03384 13.0233 7.59645C13.5859 8.15906 13.902 8.92212 13.902 9.71777C13.902 10.5134 13.5859 11.2765 13.0233 11.8391C12.4607 12.4017 11.6977 12.7178 10.902 12.7178Z\"\r\n        fill=\"#8E919C\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nfunction Left(props) {\r\n  return (\r\n    <svg\r\n      aria-hidden=\"true\"\r\n      focusable=\"false\"\r\n      data-prefix=\"fas\"\r\n      data-icon=\"chevron-left\"\r\n      className=\"svg-inline--fa fa-chevron-left fa-w-10\"\r\n      role=\"img\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 320 512\"\r\n      width={props.width}\r\n      height={props.height}\r\n    >\r\n      <path\r\n        fill={props.fill}\r\n        d=\"M34.52 239.03L228.87 44.69c9.37-9.37 24.57-9.37 33.94 0l22.67 22.67c9.36 9.36 9.37 24.52.04 33.9L131.49 256l154.02 154.75c9.34 9.38 9.32 24.54-.04 33.9l-22.67 22.67c-9.37 9.37-24.57 9.37-33.94 0L34.52 272.97c-9.37-9.37-9.37-24.57 0-33.94z\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n}\r\n\r\nfunction Right(props) {\r\n  return (\r\n    <svg\r\n      aria-hidden=\"true\"\r\n      focusable=\"false\"\r\n      data-prefix=\"fas\"\r\n      data-icon=\"chevron-right\"\r\n      className=\"svg-inline--fa fa-chevron-right fa-w-10\"\r\n      role=\"img\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 320 512\"\r\n      width={props.width}\r\n      height={props.height}\r\n    >\r\n      <path\r\n        fill={props.fill}\r\n        d=\"M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n}\r\nexport { Search, Ellipses, PasswordToggler, Left, Right };\r\n","import axios from \"axios\";\r\nconst API_URL = \"http://127.0.0.1:8000\";\r\nclass AuthService {\r\n  /***********************************Register******************* */\r\n  register(data) {\r\n    return axios.post(API_URL + \"/api/customer/\", data).then((response) => {\r\n      if (response) {\r\n      }\r\n\r\n      return response;\r\n    });\r\n  }\r\n  /***********************************Login********************* */\r\n  login(data) {\r\n    return axios\r\n      .post(API_URL + \"/api/login/\", data, {\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response;\r\n      });\r\n  }\r\n\r\n  /***********************************Get User******************* */\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem(\"user\"));\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { useState } from \"react\";\r\nimport Navbar from \"../../Components/Navbar\";\r\nimport { PasswordToggler } from \"../../Components/Icons\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport AuthService from \"../../Services/auth.service\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nconst Login = () => {\r\n  let history = useHistory();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [success, setSuccess] = useState({ email: true, password: true });\r\n  const [placeHolder, setPlaceHolder] = useState(\"Enter email\");\r\n  const [passwordType, setPasswordType] = useState(\"password\");\r\n  const [error, setError] = useState(\"\");\r\n  const [isOpen, setOpen] = useState(false);\r\n  const toggle = () => {\r\n    setOpen(!isOpen);\r\n  };\r\n  const togglePasswordVisibility = () => {\r\n    setPasswordType(passwordType === \"password\" ? \"text\" : \"password\");\r\n  };\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    let regg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n\r\n    if (email === \"\" || password === \"\") {\r\n      setSuccess({\r\n        ...success,\r\n        email: false,\r\n        password: false,\r\n      });\r\n    } else if (regg.test(email) === false) {\r\n      setSuccess({\r\n        ...success,\r\n        email: false,\r\n      });\r\n      setPlaceHolder(\"Enter valid email\");\r\n      setEmail(\"\");\r\n    } else {\r\n      setLoading(true);\r\n      var bodyParameters = {\r\n        email: email,\r\n        password: password,\r\n      };\r\n\r\n      await AuthService.login(bodyParameters)\r\n        .then(\r\n          () => {\r\n            history.push(\"/home\");\r\n          },\r\n          (error) => {\r\n            const err =\r\n              error && (error.response || error.message || error.toString());\r\n            setError(err.data.detail);\r\n          }\r\n        )\r\n        .finally(() => setLoading(false));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar\r\n        isOpen={isOpen}\r\n        toggleClick={toggle}\r\n        navigation=\"Create Account\"\r\n        navClick={() => history.push(\"/register\")}\r\n        color=\"primary\"\r\n      />\r\n\r\n      <div className=\"auth_form_container\">\r\n        <div className=\"form_left text-center\">\r\n          <div className=\"backdrop\">\r\n            <div className=\"form_left_text\">\r\n              <h1 className=\"text-white\">Welcome Back!</h1>\r\n              <h6 className=\"text-white normal_text\">A room without books is like a body without soul!</h6>\r\n              <h6 className=\"text-white tiny_text mt-4\">\r\n                Don't have an account? Register\r\n              </h6>\r\n              <Link to=\"/register\">\r\n                <Button color=\"info\" size=\"sm\">\r\n                  Create Account\r\n                </Button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{ width: \"100%\", \"marginBottom\":\"2em\" }}>\r\n          <Form className=\"auth_form\" onSubmit={handleLogin}>\r\n            <h1 className=\"title_text\">Login</h1>\r\n            <h6 className=\"error_text\" style={{ height: \"16px\" }}>\r\n              {error}\r\n            </h6>\r\n            <FormGroup>\r\n              <Label className=\"label\">Email</Label>\r\n              <Input\r\n                type=\"email\"\r\n                placeholder={placeHolder}\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                onFocus={() => {\r\n                  setSuccess({\r\n                    ...success,\r\n                    email: true,\r\n                  });\r\n                }}\r\n                className={(success.email && \"default_input\") || \"error_input\"}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup className=\"mb-3\">\r\n              <Label className=\"label\">Password</Label>\r\n              <InputGroup>\r\n                <Input\r\n                  placeholder=\"Enter password\"\r\n                  type={passwordType}\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  onFocus={() => {\r\n                    setSuccess({\r\n                      ...success,\r\n                      password: true,\r\n                    });\r\n                  }}\r\n                  className={\r\n                    (success.password && \"default_input\") || \"error_input\"\r\n                  }\r\n                />\r\n                <InputGroupAddon\r\n                  addonType=\"append\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={togglePasswordVisibility}\r\n                >\r\n                  <InputGroupText>\r\n                    <PasswordToggler width=\"1.1em\" height=\"1.1em\" />\r\n                  </InputGroupText>\r\n                </InputGroupAddon>\r\n              </InputGroup>\r\n            </FormGroup>\r\n\r\n            <Button\r\n              className=\"mt-4\"\r\n              type=\"submit\"\r\n              color=\"success\"\r\n              size=\"sm\"\r\n              block\r\n              disabled={loading}\r\n            >\r\n              Login\r\n              {loading && <Spinner color=\"light\" size=\"sm\" className=\"ml-1\" />}\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport Navbar from \"../../Components/Navbar\";\r\nimport { PasswordToggler } from \"../../Components/Icons\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport AuthService from \"../../Services/auth.service\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst Register = () => {\r\n  let history = useHistory();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [first_name, setFirst_name] = useState(\"\");\r\n  const [last_name, setLast_name] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [success, setSuccess] = useState({\r\n    email: true,\r\n    password: true,\r\n    first_name: true,\r\n    last_name: true,\r\n  });\r\n  const [placeHolder, setPlaceHolder] = useState(\"Enter email\");\r\n  const [passwordType, setPasswordType] = useState(\"password\");\r\n  const [error, setError] = useState(\"\");\r\n  const [isOpen, setOpen] = useState(false);\r\n  const toggle = () => {\r\n    setOpen(!isOpen);\r\n  };\r\n  const togglePasswordVisibility = () => {\r\n    setPasswordType(passwordType === \"password\" ? \"text\" : \"password\");\r\n  };\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    let regg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n\r\n    if (\r\n      email === \"\" ||\r\n      password === \"\" ||\r\n      first_name === \"\" ||\r\n      last_name === \"\"\r\n    ) {\r\n      setSuccess({\r\n        ...success,\r\n        email: false,\r\n        password: false,\r\n        first_name: false,\r\n        last_name: false,\r\n      });\r\n    } else if (regg.test(email) === false) {\r\n      setSuccess({\r\n        ...success,\r\n        email: false,\r\n      });\r\n      setPlaceHolder(\"Enter valid email\");\r\n      setEmail(\"\");\r\n    } else {\r\n      setLoading(true);\r\n      var bodyParameters = {\r\n        email: email,\r\n        password: password,\r\n        first_name: first_name,\r\n        last_name: last_name,\r\n        username:\r\n          first_name + last_name + Math.floor(Math.random() * 10000).toString(),\r\n      };\r\n\r\n      await AuthService.register(bodyParameters)\r\n        .then(\r\n          () => {\r\n            history.push(\"/login\");\r\n          },\r\n          (error) => {\r\n            const err =\r\n              error && (error.response || error.message || error.toString());\r\n            let errMsg =\r\n              err.data.first_name ||\r\n              err.data.last_name ||\r\n              err.data.password ||\r\n              err.data.email;\r\n            setError(errMsg);\r\n          }\r\n        )\r\n        .finally(() => setLoading(false));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar\r\n        isOpen={isOpen}\r\n        toggleClick={toggle}\r\n        navigation=\"Login\"\r\n        navClick={() => history.push(\"/login\")}\r\n        color=\"primary\"\r\n      />\r\n      <div className=\"auth_form_container\">\r\n        <div className=\"form_left text-center\">\r\n          <div className=\"backdrop\">\r\n            <div className=\"form_left_text\">\r\n              <h1 className=\"text-white\">Welcome!</h1>\r\n              <h6 className=\"text-white normal_text\">Ready for some quiz ?</h6>\r\n              <h6 className=\"text-white tiny_text mt-4\">\r\n                Already have an account? Login\r\n              </h6>\r\n              <Link to=\"/login\">\r\n                <Button color=\"info\" size=\"sm\">\r\n                  Login\r\n                </Button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{ width: \"100%\" }}>\r\n          <Form className=\"auth_form\" onSubmit={handleRegister}>\r\n            <h1 className=\"title_text\">Register</h1>\r\n            <h6 className=\"error_text\" style={{ height: \"16px\" }}>\r\n              {error}\r\n            </h6>\r\n            <FormGroup>\r\n              <Label className=\"label\">First Name</Label>\r\n              <Input\r\n                placeholder=\"Enter first name\"\r\n                type=\"name\"\r\n                value={first_name}\r\n                onChange={(e) => setFirst_name(e.target.value)}\r\n                onFocus={() => {\r\n                  setSuccess({\r\n                    ...success,\r\n                    first_name: true,\r\n                  });\r\n                }}\r\n                className={\r\n                  (success.first_name && \"default_input\") || \"error_input\"\r\n                }\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label className=\"label\">Last Name</Label>\r\n              <Input\r\n                placeholder=\"Enter last name\"\r\n                type=\"name\"\r\n                value={last_name}\r\n                onChange={(e) => setLast_name(e.target.value)}\r\n                onFocus={() => {\r\n                  setSuccess({\r\n                    ...success,\r\n                    last_name: true,\r\n                  });\r\n                }}\r\n                className={\r\n                  (success.last_name && \"default_input\") || \"error_input\"\r\n                }\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label className=\"label\">Email</Label>\r\n              <Input\r\n                type=\"email\"\r\n                placeholder={placeHolder}\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                onFocus={() => {\r\n                  setSuccess({\r\n                    ...success,\r\n                    email: true,\r\n                  });\r\n                }}\r\n                className={(success.email && \"default_input\") || \"error_input\"}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup className=\"mb-3\">\r\n              <Label className=\"label\">Password</Label>\r\n              <InputGroup>\r\n                <Input\r\n                  placeholder=\"Enter password\"\r\n                  type={passwordType}\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  onFocus={() => {\r\n                    setSuccess({\r\n                      ...success,\r\n                      password: true,\r\n                    });\r\n                  }}\r\n                  className={\r\n                    (success.password && \"default_input\") || \"error_input\"\r\n                  }\r\n                />\r\n                <InputGroupAddon\r\n                  addonType=\"append\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={togglePasswordVisibility}\r\n                >\r\n                  <InputGroupText>\r\n                    <PasswordToggler width=\"1.1em\" height=\"1.1em\" />\r\n                  </InputGroupText>\r\n                </InputGroupAddon>\r\n              </InputGroup>\r\n            </FormGroup>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"mb-5 mt-4\"\r\n              color=\"success\"\r\n              size=\"sm\"\r\n              block\r\n              disabled={loading}\r\n            >\r\n              Continue\r\n              {loading && <Spinner color=\"light\" size=\"sm\" className=\"ml-1\" />}\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Register;\r\n","import axios from \"axios\";\r\nconst API_URL = \"http://127.0.0.1:8000\";\r\nclass UserService {\r\n  /********************Retrive current user from localstorage ********************/\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem(\"user\"));\r\n  }\r\n\r\n  /********************Post user data ********************/\r\n  async formSubmit(data, url) {\r\n    let user = await localStorage.getItem(\"user\");\r\n    user = JSON.parse(user);\r\n    return axios\r\n      .post(API_URL + url, data, {\r\n        headers: {\r\n          Authorization:\r\n            user && user.access_token ? `Bearer ${user.access_token}` : \"\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data) {\r\n          return response;\r\n        }\r\n      });\r\n  }\r\n  /********************Get user data ********************/\r\n  async getInfo(data, url) {\r\n    let user = await localStorage.getItem(\"user\");\r\n    user = JSON.parse(user);\r\n    return axios\r\n      .get(\r\n        API_URL + url,\r\n\r\n        // {\r\n        //   headers: {\r\n        //     Authorization:\r\n        //       user && user.access_token ? `Bearer ${user.access_token}` : \"\",\r\n        //   },\r\n        // },\r\n        data\r\n      )\r\n      .then((response) => {\r\n        if (response.data) {\r\n          return response;\r\n        }\r\n      });\r\n  }\r\n\r\n  /********************Patch user data ********************/\r\n  async formPatch(data, url) {\r\n    let user = await localStorage.getItem(\"user\");\r\n    user = JSON.parse(user);\r\n\r\n    return axios\r\n      .patch(API_URL + url, data, {\r\n        headers: {\r\n          Authorization:\r\n            user && user.access_token ? `Bearer ${user.access_token}` : \"\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data) {\r\n          return response;\r\n        }\r\n      });\r\n  }\r\n\r\n  /***********************************Delete User Info********************/\r\n  async deleteInfo(url) {\r\n    let user = await localStorage.getItem(\"user\");\r\n    user = JSON.parse(user);\r\n    return axios.delete(\r\n      API_URL + url,\r\n\r\n      {\r\n        headers: {\r\n          Authorization:\r\n            user && user.access_token ? `Bearer ${user.access_token}` : \"\",\r\n        },\r\n      }\r\n    );\r\n  }\r\n}\r\nexport default new UserService();\r\n","import React from \"react\";\r\nimport Logo from \"../../Components/Logo\";\r\nimport { Left, Right } from \"../../Components/Icons\";\r\nimport { Button } from \"reactstrap\";\r\nexport default function Quiz({\r\n  index,\r\n  question,\r\n  options,\r\n  backClick,\r\n  prevClick,\r\n  prevDisabled,\r\n  nextClick,\r\n  nextDisabled,\r\n}) {\r\n  return (\r\n    <div className=\"home_body\">\r\n      <nav className=\"quiz_header_section\">\r\n        <Button\r\n          size=\"sm\"\r\n          color=\"danger\"\r\n          onClick={backClick}\r\n          style={{ width: \"80px\", display: \"flex\", alignItems: \"center\" }}\r\n        >\r\n          <Left width=\"1em\" height=\"1em\" fill=\"white\" />\r\n          <h6 style={{ margin: \"7px 0 7px 5px\" }}>Back</h6>\r\n        </Button>\r\n\r\n        <Logo />\r\n        <h6>{index}/10</h6>\r\n      </nav>\r\n      <div className=\"quiz_body\">\r\n        <div className=\"questions_section\">{question}</div>\r\n\r\n        <div className=\"options_container\">{options}</div>\r\n        <div className=\"quiz_nav_body\">\r\n          <Button\r\n            size=\"sm\"\r\n            color=\"primary\"\r\n            onClick={nextClick}\r\n            disabled={nextDisabled}\r\n          >\r\n            <h6>Next</h6>\r\n            <Right width=\"1em\" height=\"1em\" fill=\"white\" />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Search } from \"./Icons\";\r\n\r\nfunction SearchBar({ placeholder, barClassName, onChange, value }) {\r\n  return (\r\n    <div style={{ width: \"60%\" }}>\r\n      <div className=\"search_bar\">\r\n        <input placeholder=\"Search\" onChange={onChange} value={value}></input>\r\n        <button className=\"helper_button\">\r\n          <Search width=\"1.2em\" height=\"1.2em\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\n\r\nexport default function AppModal({\r\n  modal,\r\n  toggle,\r\n  className,\r\n  title,\r\n  body,\r\n  showFooter,\r\n  action,\r\n}) {\r\n  return (\r\n    <Modal isOpen={modal} toggle={toggle} className={className}>\r\n      <ModalHeader toggle={toggle}>{title}</ModalHeader>\r\n      <ModalBody>{body}</ModalBody>\r\n      {showFooter && (\r\n        <ModalFooter>\r\n          <Button color=\"danger\" onClick={toggle}>\r\n            {action}\r\n          </Button>\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      )}\r\n    </Modal>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\n\r\nexport default function AppSelect({\r\n  className,\r\n  options,\r\n  value,\r\n  placeholder,\r\n  handleChange,\r\n  isLoading,\r\n  defaultInputValue,\r\n  showError,\r\n  onFocus,\r\n  errorMessage,\r\n}) {\r\n  return (\r\n    <div className={`react-select-all-container mb-3 ${className}`}>\r\n      <div className=\"error_message_text\" style={{ marginTop: \"\" }}>\r\n        {showError && <h6 style={{ color: \"#F01919\" }}>{errorMessage}</h6>}\r\n      </div>\r\n\r\n      <Select\r\n        className=\"react-select-container\"\r\n        classNamePrefix=\"react-select\"\r\n        hideSelectedOptions=\"true\"\r\n        // menuIsOpen={true}\r\n        isFocussed={true}\r\n        placeholder={placeholder}\r\n        closeMenuOnSelect={true}\r\n        isSelected={true}\r\n        options={options}\r\n        backspaceRemovesValue\r\n        onChange={handleChange}\r\n        value={value}\r\n        isLoading={isLoading}\r\n        defaultInputValue={defaultInputValue}\r\n        onFocus={onFocus}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Navbar from \"../../Components/Navbar\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Table, Button, Input, Form, Label, Spinner } from \"reactstrap\";\r\nimport Quiz from \"./Quiz\";\r\nimport SearchBar from \"../../Components/Searchbar\";\r\nimport Modal from \"../../Components/Modal\";\r\nimport AppSelect from \"../../Components/Select\";\r\nimport { Ellipses } from \"../../Components/Icons\";\r\nimport AuthService from \"../../Services/auth.service\";\r\nimport UserService from \"../../Services/user.service\";\r\nimport ReactPaginate from \"react-paginate\";\r\nexport default class Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userId: \"\",\r\n      userName: \"\",\r\n      searchQuery: \"\",\r\n      isOpen: false,\r\n      dropdownOpen: false,\r\n      showCreateModal: false,\r\n      modalType: \"\",\r\n      showUpdateModal: false,\r\n      tournament: \"\",\r\n      category: \"\",\r\n      book:\"\",\r\n      difficulty: \"\",\r\n      currentCategory: [],\r\n      tournamentSuccess: true,\r\n      first_nameSuccess: true,\r\n      last_nameSuccess: true,\r\n      categorySuccess: true,\r\n      difficultySuccess: true,\r\n      categoryOptions: [],\r\n      bookStoreList: [],\r\n      allbookStoreList: [],\r\n      bookOptions: [],\r\n      offset: 0,\r\n      perPage: 100,\r\n      currentPage: 0,\r\n      pageLoading: false,\r\n      categoryLoading: false,\r\n      createLoading: false,\r\n      createText: \"Borrow\",\r\n      updateText: \"Update Tournament\",\r\n      deleteText: \"Yes\",\r\n      createColor: \"primary\",\r\n      error: \"\",\r\n      showTournaments: true,\r\n      showQuiz: false,\r\n      currentTournament: {},\r\n      currentQuestion: 0,\r\n      selectedOption: \"\",\r\n      selectedAnswer: {},\r\n      correctAnswers: 0,\r\n      showFinalModal: false,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let auth = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (!auth) {\r\n      this.props.history.push(\"/login\");\r\n    } else {\r\n      await this.handleGetCategoryOptions();\r\n      await this.setState({\r\n        userId: auth.id,\r\n        userName: auth.first_name + \" \" + auth.last_name,\r\n      });\r\n      await this.handleGetTournaments();\r\n    }\r\n  }\r\n\r\n  handleGetTournaments = async () => {\r\n    const data = await UserService.getInfo(null, `/api/rented-books/${this.state.userId}`)\r\n      .then(async (response) => {\r\n        for (let i = 0; i < response.data.length; i++) {\r\n          response.data[i].show = true;\r\n        }\r\n        const slice =  response.data['rented_books'].slice(\r\n          this.state.offset,this.state.offset + this.state.perPage\r\n        );\r\n        this.setState({\r\n          pageCount: Math.ceil(response.data.length / this.state.perPage),\r\n          bookStoreList: slice,\r\n          allbookStoreList: response.data['rented_books'],\r\n          total_fee: response.data['total_fee']\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        if (\r\n          (e && e.response && e.response.status === 401) ||\r\n          (e && e.response && e.response.status === 404) ||\r\n          (e && e.response && e.response.status === 403) ||\r\n          (e && e.response && e.response.status === 503)\r\n        ) {\r\n          this.props.history.push(\"/login\");\r\n          AuthService.logout();\r\n        }\r\n        this.setState({ error: e });\r\n      })\r\n      .finally(() => {\r\n        this.setState({ pageLoading: false });\r\n      });\r\n  };\r\n\r\n  handleGetCategoryOptions = async () => {\r\n    this.setState({ categoryLoading: true });\r\n    await UserService.getInfo(null, \"/api/category\")\r\n      .then(async (response) => {\r\n        this.setState({currentCategory: response.data})\r\n        for (let i = 0; i < response.data.length; i++) {\r\n          this.setState((prevState) => ({\r\n            categoryOptions: [\r\n              ...prevState.categoryOptions,\r\n              {\r\n                value:\r\n                  response &&\r\n                  response.data &&\r\n                  response.data[i] &&\r\n                  response.data[i].id,\r\n                label:\r\n                  response &&\r\n                  response.data &&\r\n                  response.data[i] &&\r\n                  response.data[i].name,\r\n              },\r\n            ],\r\n          }));\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        if (\r\n          (e && e.response && e.response.status === 401) ||\r\n          (e && e.response && e.response.status === 404) ||\r\n          (e && e.response && e.response.status === 403) ||\r\n          (e && e.response && e.response.status === 503)\r\n        ) {\r\n          this.props.history.push(\"/login\");\r\n          AuthService.logout();\r\n        }\r\n        this.setState({ error: e });\r\n      })\r\n      .finally(() => {\r\n        this.setState({ categoryLoading: false });\r\n      });\r\n  };\r\n  handlePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    const offset = selectedPage * this.state.perPage;\r\n    this.setState(\r\n      {\r\n        currentPage: selectedPage,\r\n        offset: offset,\r\n      },\r\n      () => {\r\n        this.loadMoreData();\r\n      }\r\n    );\r\n  };\r\n\r\n  loadMoreData = () => {\r\n    const data = this.state.allbookStoreList;\r\n    const slice = data.slice(\r\n      this.state.offset,\r\n      this.state.offset + this.state.perPage\r\n    );\r\n    this.setState({\r\n      pageCount: Math.ceil(data.length / this.state.perPage),\r\n      bookStoreList: slice,\r\n    });\r\n  };\r\n\r\n  toggle = (state, value, reset) => {\r\n    this.setState({ [state]: value });\r\n    reset &&\r\n      this.setState({\r\n        tournamentSuccess: true,\r\n        categorySuccess: true,\r\n        difficultySuccess: true,\r\n        createText: \"Borrow !\",\r\n        updateText: \"Update Tournament\",\r\n        deleteText: \"Yes\",\r\n        createColor: \"primary\",\r\n      });\r\n  };\r\n  toggleActionData = (index, selected) => {\r\n    const values = [...this.state.bookStoreList];\r\n    values[index][selected] = !values[index][selected];\r\n    this.setState({ values });\r\n  };\r\n  showBookSelect = () =>{\r\n      let bookOptions = []\r\n      for (let i = 0; i < this.state.currentCategory[this.state.category-1].book_category.length; i++) {\r\n        bookOptions.push({\r\n          value:\r\n            this.state.currentCategory &&\r\n            this.state.currentCategory &&\r\n            this.state.currentCategory[this.state.category-1].book_category[i].id,\r\n          label:\r\n            this.state.currentCategory &&\r\n            this.state.currentCategory[this.state.category-1] &&\r\n            this.state.currentCategory[this.state.category-1].book_category[i].name,\r\n        })\r\n      } \r\n      this.setState({bookOptions })   \r\n  }\r\n  handleInputChange = async (state, value, isCategory) => {\r\n    await this.setState({ [state]: value });\r\n    isCategory &&\r\n    this.showBookSelect();\r\n  };\r\n  handleSuccess = () => {\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      tournamentSuccess: false,\r\n      categorySuccess: false,\r\n      difficultySuccess: false,\r\n    }));\r\n  };\r\n  handleFocus = (field) => {\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      [field]: true,\r\n    }));\r\n  };\r\n  handleCreateTournament = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      this.state.book === \"\"\r\n    ) {\r\n      this.handleSuccess();\r\n    } else {\r\n      this.setState({ createLoading: true });\r\n      var bodyParameters = {\r\n        book: this.state.book,\r\n        customer: this.state.userId,\r\n      };\r\n      await UserService.formSubmit(bodyParameters, \"/api/lend-book/\")\r\n        .then(async () => {\r\n          this.setState({\r\n            createText: \"Created\",\r\n            createColor: \"success\",\r\n            createLoading: false,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          if (\r\n            (error && error.response && error.response.status === 401) ||\r\n            (error && error.response && error.response.status === 404) ||\r\n            (error && error.response && error.response.status === 403) ||\r\n            (error && error.response && error.response.status === 503)\r\n          ) {\r\n            this.props.history.push(\"/login\");\r\n            AuthService.logout();\r\n          }\r\n          this.setState({\r\n            createText: \"Error\",\r\n            createColor: \"danger\",\r\n            createLoading: false,\r\n          });\r\n          const err =\r\n            error && (error.response || error.message || error.toString());\r\n          this.setState({ createError: err.data.error[0] });\r\n        })\r\n        .finally(async () => {\r\n          await this.handleGetTournaments();\r\n        });\r\n    }\r\n  };\r\n\r\n  handleUpdateTournament = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      this.state.tournament === \"\" ||\r\n      this.state.category === \"\" ||\r\n      this.state.difficulty === \"\"\r\n    ) {\r\n      this.handleSuccess();\r\n    } else {\r\n      this.setState({ createLoading: true });\r\n      var bodyParameters = {\r\n        difficulty: this.state.difficulty,\r\n        category: this.state.category,\r\n        name: this.state.tournament,\r\n        user: this.state.userId,\r\n      };\r\n      await UserService.formPatch(\r\n        bodyParameters,\r\n        `/api/quiz-tournaments/${this.state.currentTournament.id}`\r\n      )\r\n        .then(async () => {\r\n          this.setState({\r\n            updateText: \"Updated\",\r\n            createColor: \"success\",\r\n            createLoading: false,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          if (\r\n            (error && error.response && error.response.status === 401) ||\r\n            (error && error.response && error.response.status === 404) ||\r\n            (error && error.response && error.response.status === 403) ||\r\n            (error && error.response && error.response.status === 503)\r\n          ) {\r\n            this.props.history.push(\"/login\");\r\n            AuthService.logout();\r\n          }\r\n          this.setState({\r\n            updateText: \"Error\",\r\n            createColor: \"danger\",\r\n            createLoading: false,\r\n          });\r\n          const err =\r\n            error && (error.response || error.message || error.toString());\r\n\r\n          this.setState({ createError: err.data });\r\n        })\r\n        .finally(async () => {\r\n          await this.handleGetTournaments();\r\n        });\r\n    }\r\n  };\r\n\r\n  renderViews = (name) => {\r\n    switch (name) {\r\n      case \"showTournaments\":\r\n        window.scrollTo({\r\n          top: 0,\r\n        });\r\n        this.setState({\r\n          showTournaments: true,\r\n          showQuiz: false,\r\n        });\r\n        break;\r\n      case \"showQuiz\":\r\n        window.scrollTo({\r\n          top: 0,\r\n        });\r\n        this.setState({\r\n          showQuiz: true,\r\n          showTournaments: false,\r\n        });\r\n        break;\r\n      default:\r\n        this.setState({\r\n          showTournaments: true,\r\n          showQuiz: false,\r\n        });\r\n    }\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    const {\r\n      userName,\r\n      isOpen,\r\n      showCreateModal,\r\n      bookStoreList,\r\n      categoryOptions,\r\n      showTournaments,\r\n      showQuiz,\r\n      currentTournament,\r\n      currentQuestion,\r\n      selectedOption,\r\n\r\n      correctAnswers,\r\n      modalType,\r\n    } = this.state;\r\n    return (\r\n      <div className=\"home_page_container\">\r\n        <Navbar\r\n          isOpen={isOpen}\r\n          toggleClick={() => this.toggle(\"isOpen\", !this.state.isOpen)}\r\n          navClick={() => {\r\n            AuthService.logout();\r\n            this.props.history.push(\"/login\");\r\n          }}\r\n          navigation=\"Logout\"\r\n          color=\"danger\"\r\n        />\r\n\r\n        {showTournaments && (\r\n          <div className=\"home_body\">\r\n            <div className=\"home_section_one\">\r\n              <Button\r\n                className=\"create_button\"\r\n                color=\"success\"\r\n                size=\"md\"\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                onClick={() => {\r\n                  this.toggle(\r\n                    \"showCreateModal\",\r\n                    !this.state.showCreateModal,\r\n                    true\r\n                  );\r\n                }}\r\n              >\r\n                <span style={{ fontWeight: \"bold\", marginRight: \"5px\" }}>\r\n                  +\r\n                </span>\r\n                <h6>Borrow new book!</h6>\r\n              </Button>\r\n              <SearchBar\r\n                value={this.state.searchQuery}\r\n                onChange={(e) =>\r\n                  this.handleInputChange(\"searchQuery\", e.target.value)\r\n                }\r\n              />\r\n            </div>\r\n            <h5 style={{color: \"lightblue\" }}><center>Hi, {this.state.userName}</center></h5>\r\n              <h5 style={{color: \"lightblue\" }}><center>Your total outstanding charge is: ${this.state.total_fee}</center></h5>\r\n            <h6 className=\"table_container-text\"><center>BOOKS YOU BORROWED</center></h6>\r\n            <div className=\"table_container\">\r\n              <Table hover responsive>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Book Name</th>\r\n                    <th>Category</th>\r\n                    <th>Date Borrowed</th>\r\n                    <th>Unit Charge</th>\r\n                    <th>Accumulated Charge</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {bookStoreList\r\n                    .filter((item) => {\r\n                      if (this.state.searchQuery === \"\") {\r\n                        return item;\r\n                      } else if (\r\n                        `${\r\n                          item &&\r\n                          item.book &&\r\n                          item.book.name.toLowerCase()}`.includes(this.state.searchQuery.toLowerCase()) ||\r\n                        (item &&\r\n                          item.book.category &&\r\n                          item.book.category.name\r\n                            .toLowerCase()\r\n                            .includes(this.state.searchQuery.toLowerCase()))\r\n                      \r\n                      ) {\r\n                        return item;\r\n                      }\r\n                      return true;\r\n                    })\r\n\r\n                    .map((item, i) => {\r\n                      return (\r\n                        <tr key={\"tournament\" + i}>\r\n                          <th scope=\"row\">{item.book.name}</th>\r\n                          <td>\r\n                            {item.book.category.name}\r\n                          </td>\r\n                          <td>{(item.date_logged).slice(0,10)}</td>\r\n                          <td>\r\n                            ${item.book.category.price.toFixed(1)}\r\n                          </td>\r\n                          <td>${item.rental_charge.toFixed(1)}</td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                </tbody>\r\n              </Table>\r\n              {bookStoreList.length !== 0 && (\r\n                <ReactPaginate\r\n                  previousLabel={\"Previous\"}\r\n                  nextLabel={\"Next\"}\r\n                  breakLabel={\"...\"}\r\n                  breakClassName={\"break-me\"}\r\n                  pageCount={this.state.pageCount}\r\n                  marginPagesDisplayed={2}\r\n                  pageRangeDisplayed={5}\r\n                  onPageChange={this.handlePageClick}\r\n                  containerClassName={\"pagination\"}\r\n                  subContainerClassName={\"pages pagination\"}\r\n                  activeClassName={\"active\"}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {showQuiz && (\r\n          <Quiz\r\n            index={(currentQuestion < 10 && currentQuestion + 1) || \"---\"}\r\n            question={\r\n              currentTournament &&\r\n              currentTournament.questions &&\r\n              currentTournament.questions.map((item, i) => {\r\n                if (i === currentQuestion) {\r\n                  return <h6 key={\"question\" + i}>{item.question_text}</h6>;\r\n                }\r\n                return true\r\n              })\r\n            }\r\n            options={\r\n              currentTournament &&\r\n              currentTournament.questions[currentQuestion] &&\r\n              currentTournament.questions[currentQuestion].choice_text.map(\r\n                (item, i) => {\r\n                  return (\r\n                    <button\r\n                      key={\"option\" + i}\r\n                      className={`single_option ${\r\n                        (selectedOption.includes(item.choice_text) &&\r\n                          \"single_option_active\") ||\r\n                        \"\"\r\n                      }`}\r\n                      onClick={() => {\r\n                        this.handleAnswerSelect(item.choice_text);\r\n                        this.setState({ selectedAnswer: item });\r\n                      }}\r\n                    >\r\n                      <h6>{item.choice_text}</h6>\r\n                    </button>\r\n                  );\r\n                }\r\n              )\r\n            }\r\n            backClick={() => {\r\n              this.renderViews(\"showTournaments\");\r\n            }}\r\n            nextClick={this.handleNext}\r\n            nextDisabled={currentQuestion === 11}\r\n          />\r\n        )}\r\n        <Modal\r\n          modal={currentQuestion === 10}\r\n          toggle={this.finishQuiz}\r\n          className=\"result_modal\"\r\n          showHeader\r\n          title=\"Quiz Result\"\r\n          body={\r\n            <div>\r\n              <h6>Your score</h6>\r\n              <h6 style={{ color: \"#17a2b8\", fontSize: \"24px\" }}>\r\n                {((correctAnswers / 10) * 100 &&\r\n                  (correctAnswers / 10) * 100 + \"%\") ||\r\n                  \"0%\"}\r\n              </h6>\r\n\r\n              <div>\r\n                {currentTournament &&\r\n                  currentTournament.questions &&\r\n                  currentTournament.questions.map((item, i) => {\r\n                    return (\r\n                      <div key={\"item\" + i}>\r\n                        <Label>{`Question ${i + 1}`}</Label>\r\n                        <h6> {item.question_text}</h6>\r\n                        <Label>Options</Label>\r\n                        <div>\r\n                          {item.choice_text.map((item, i) => {\r\n                            return (\r\n                              <button\r\n                                key={\"option\" + i}\r\n                                className={`single_option ${\r\n                                  (item.correct_answer &&\r\n                                    \"single_option_correct\") ||\r\n                                  \"\"\r\n                                }`}\r\n                              >\r\n                                <h6>{item.choice_text}</h6>\r\n                              </button>\r\n                            );\r\n                          })}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </div>\r\n              <Button\r\n                color=\"info\"\r\n                block\r\n                className=\"mt-3\"\r\n                onClick={this.finishQuiz}\r\n              >\r\n                Finish\r\n              </Button>\r\n            </div>\r\n          }\r\n        />\r\n\r\n        <Modal\r\n          modal={showCreateModal}\r\n          toggle={() => {\r\n            this.toggle(\"showCreateModal\", !this.state.showCreateModal, true);\r\n            this.setState({\r\n              modalType: \"\",\r\n              tournament: \"\",\r\n              category: \"\",\r\n              difficulty: \"\",\r\n            });\r\n          }}\r\n          className=\"form_modal\"\r\n          title={\r\n            (modalType === \"update\" && \"Update Quiz Tournament\") ||\r\n            (modalType === \"delete\" && \"Delete Tournament\") ||\r\n            \"Borrow a Book\"\r\n          }\r\n          showHeader={true}\r\n          body={\r\n            (modalType === \"delete\" && (\r\n              <div>\r\n                <h6>\r\n                  Are you sure you want to delete\r\n                  {\" \" + this.state.currentTournament.name}\r\n                </h6>\r\n                <div className=\"delete_prompt_container\">\r\n                  <Button\r\n                    color=\"danger\"\r\n                    size=\"sm\"\r\n                    disabled={this.state.pageLoading}\r\n                    onClick={() => {\r\n                      this.handleDeleteTournament();\r\n                      this.setState({ showCreateModal: false });\r\n                    }}\r\n                  >\r\n                    {this.state.deleteText}\r\n                  </Button>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    size=\"sm\"\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        showCreateModal: false,\r\n                        currentTournament: {},\r\n                      });\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            )) || (\r\n              <Form\r\n                className=\"create_form\"\r\n                onSubmit={\r\n                  (modalType === \"update\" && this.handleUpdateTournament) ||\r\n                  this.handleCreateTournament\r\n                }\r\n              >\r\n                <h6 className=\"error_text\" style={{ height: \"16px\" }}>\r\n                  {this.state.createError}\r\n                </h6>\r\n                <Input\r\n                  type=\"name\"\r\n                  disabled\r\n                  className={\r\n                    (this.state.last_nameSuccess && \"mb-3\") ||\r\n                    \"mb-3 error_input\"\r\n                  }\r\n                  value={\r\n                    modalType === \"update\"\r\n                      ? currentTournament.creator.first_name +\r\n                        \" \" +\r\n                        currentTournament.creator.last_name\r\n                      : userName\r\n                  }\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                />\r\n                <AppSelect\r\n                  defaultInputValue={\r\n                    (modalType === \"update\" &&\r\n                      currentTournament.category.category_name) ||\r\n                    \"\"\r\n                  }\r\n                  placeholder=\"Select Category\"\r\n                  options={categoryOptions}\r\n                  handleChange={(e) =>\r\n                    this.handleInputChange(\"category\", e.value, true)\r\n                  }\r\n                  onFocus={() => this.handleFocus(\"categorySuccess\")}\r\n                  className={\r\n                    (this.state.categorySuccess && \"sucess_select\") ||\r\n                    \"error_select\"\r\n                  }\r\n                />\r\n                {this.state.category && <AppSelect\r\n                  defaultInputValue={\r\n                    (modalType === \"update\" && currentTournament.difficulty) ||\r\n                    \"\"\r\n                  }\r\n                  placeholder=\"Choose Books\"\r\n                  options={this.state.bookOptions}\r\n                  handleChange={(e) =>\r\n                    this.handleInputChange(\"book\", e.value)\r\n                  }\r\n                  onFocus={() => this.handleFocus(\"difficultySuccess\")}\r\n                  className={\r\n                    (this.state.difficultySuccess && \"sucess_select\") ||\r\n                    \"error_select\"\r\n                  }\r\n                />}\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  className=\"mb-4 mt-4\"\r\n                  color={this.state.createColor}\r\n                  disabled={this.state.createLoading}\r\n                  size=\"sm\"\r\n                  block\r\n                >\r\n                  {(modalType === \"update\" && this.state.updateText) ||\r\n                    this.state.createText}\r\n                  {this.state.createLoading && (\r\n                    <Spinner color=\"light\" size=\"sm\" className=\"ml-1\" />\r\n                  )}\r\n                </Button>\r\n              </Form>\r\n            )\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n// export default withRouter(Home);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./App.css\";\nimport Login from \"./Pages/Authentication/Login\";\nimport Register from \"./Pages/Authentication/Register\";\nimport UserService from \"./Services/user.service\";\nimport Home from \"./Pages/App/Home\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAuth: UserService.getCurrentUser() && UserService.getCurrentUser().id,\n    };\n  }\n\n  render() {\n    const { isAuth } = this.state;\n    return isAuth ? <Home /> : <Login />;\n  }\n}\n\nReactDOM.render(\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" component={App} />\n\n      <Route exact path=\"/login\" component={Login} />\n      <Route exact path=\"/register\" component={Register} />\n\n      <Route exact path=\"/home\" component={Home} />\n      <Route path=\"*\">\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <h2>404 Not Found</h2>\n        </div>\n      </Route>\n    </Switch>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}